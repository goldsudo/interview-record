单例模式有哪些实现方式，是否线程安全？
代理模式和装饰器模式的区别？
工作中用过哪些设计模式？（工厂、策略、建造者）

单例模式有哪些实现方式，是否线程安全？
答：
	懒汉、饿汉、double-check、枚举等。
	懒汉式不能保证线程安全，需要使用synchronized锁住整个getInstance方法，或者采用double-check
	枚举时目前看来最优的单例实现方式，不过他是饿汉式的。

代理模式和装饰器模式的区别？
答：
	这两种设计模式的实现都有点类似，
	不过代理模式的重点是替代，而装饰器模式的重点是增强。
	一个重要的区别是代理模式本身持有并初始化了一个原类型的对象，
	而装饰器模式则是由外部将原类型的对象传入，则意味着可以不断的嵌套装饰器，使得类的功能越发强大。

工作中用过哪些设计模式？
答：
	工厂、策略、建造者、模板模式